{"version":3,"sources":["scripts/main.js"],"names":["BASE_URL","body","document","querySelector","phonesList","createElement","appendChild","request","url","timeout","fetch","then","response","setTimeout","ok","status","statusText","json","getPhones","phones","allPhonesId","map","phone","id","getPhonesDetails","idSet","forEach","phoneId","item","insertAdjacentHTML","name","phonesWithDetails","phonesWithDetailsList","push"],"mappings":";AAAA,aAEA,IAAMA,EAAW,6DAEXC,EAAOC,SAASC,cAAc,QAC9BC,EAAaF,SAASG,cAAc,MAE1CJ,EAAKK,YAAYF,GAEjB,IAAMG,EAAU,SAACC,GAAKC,IAAAA,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EACvBC,OAAAA,MAASV,GAAAA,OAAAA,GAAWQ,OAAAA,IACxBG,KAAK,SAAAC,GAOGA,OANPC,WAAW,WACL,IAACD,EAASE,GACFF,MAAAA,GAAAA,OAAAA,EAASG,OAAYH,OAAAA,OAAAA,EAASI,aAEzCP,GAEIG,EAASK,UAIhBC,EAAY,WAChBX,EAAQ,eAAgB,KACrBI,KAAK,SAAAQ,GACEC,IAAAA,EAAcD,EAAOE,IAAI,SAAAC,GAASA,OAAAA,EAAMC,KAE9CC,EAAiBJ,MAIjBI,EAAmB,SAACC,GACxBA,EAAMC,QAAQ,SAAAC,GAAWpB,OAAAA,EAAmBoB,WAAAA,OAAAA,EAAnB,UACtBhB,KAAK,SAAAiB,GAAQxB,OAAAA,EAAWyB,mBAAmB,aACpCD,eAAAA,OAAAA,EAAKE,KADH,qBAMRC,EAAoB,WAClBC,IAAAA,EAAwB,GAWvBA,OATPzB,EAAQ,gBACLI,KAAK,SAAAQ,GACgBA,EAAOE,IAAI,SAAAC,GAASA,OAAAA,EAAMC,KAElCG,QAAQ,SAAAC,GAAWpB,OAAAA,EAAmBoB,WAAAA,OAAAA,EAAnB,UAC5BhB,KAAK,SAAAiB,GAAQI,OAAAA,EAAsBC,KAAKL,SAIxCI,GAGTd,IACAa","file":"main.eff712b1.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst BASE_URL = ' https://mate-academy.github.io/phone-catalogue-static/api';\n\nconst body = document.querySelector('body');\nconst phonesList = document.createElement('ul');\n\nbody.appendChild(phonesList);\n\nconst request = (url, timeout = 0) => {\n  return fetch(`${BASE_URL}${url}`)\n    .then(response => {\n      setTimeout(() => {\n        if (!response.ok) {\n          return `${response.status} - ${response.statusText}`;\n        }\n      }, timeout);\n\n      return response.json();\n    });\n};\n\nconst getPhones = () => {\n  request('/phones.json', 5000)\n    .then(phones => {\n      const allPhonesId = phones.map(phone => phone.id);\n\n      getPhonesDetails(allPhonesId);\n    });\n};\n\nconst getPhonesDetails = (idSet) => {\n  idSet.forEach(phoneId => request(`/phones/${phoneId}.json`)\n    .then(item => phonesList.insertAdjacentHTML('afterbegin', `\n      <li>${item.name}</li>\n    `))\n  );\n};\n\nconst phonesWithDetails = () => {\n  const phonesWithDetailsList = [];\n\n  request('/phones.json')\n    .then(phones => {\n      const allPhonesId = phones.map(phone => phone.id);\n\n      allPhonesId.forEach(phoneId => request(`/phones/${phoneId}.json`)\n        .then(item => phonesWithDetailsList.push(item))\n      );\n    });\n\n  return phonesWithDetailsList;\n};\n\ngetPhones();\nphonesWithDetails();\n"]}